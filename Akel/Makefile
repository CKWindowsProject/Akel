# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
TARGETDIR = ../libs/lib/Linux
TARGET = $(TARGETDIR)/libAkel.so
INCLUDES += -I../libs/include -Isrc
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lvulkan -lSDL2 -lSDL2_image -lSDL2_mixer -lSDL2_ttf
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
OBJDIR = ../build-int/Debug-linux/Debug/Akel
DEFINES += -DSDL_MAIN_HANDLED -DAK_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -g -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L../libs/lib/Linux -L/usr/lib64 -m64 -shared -Wl,-soname=libAkel.so -shared

else ifeq ($(config),release)
OBJDIR = ../build-int/Release-linux/Release/Akel
DEFINES += -DSDL_MAIN_HANDLED -DAK_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fPIC -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -L../libs/lib/Linux -L/usr/lib64 -m64 -shared -Wl,-soname=libAkel.so -s -shared

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Akpch.o
GENERATED += $(OBJDIR)/ELTMcontext.o
GENERATED += $(OBJDIR)/ELTMerrors.o
GENERATED += $(OBJDIR)/ELTMwarnings.o
GENERATED += $(OBJDIR)/application.o
GENERATED += $(OBJDIR)/camera.o
GENERATED += $(OBJDIR)/commandBuffer.o
GENERATED += $(OBJDIR)/consoleOut.o
GENERATED += $(OBJDIR)/cpu.o
GENERATED += $(OBJDIR)/device.o
GENERATED += $(OBJDIR)/entity.o
GENERATED += $(OBJDIR)/exit.o
GENERATED += $(OBJDIR)/fps.o
GENERATED += $(OBJDIR)/frameBuffer.o
GENERATED += $(OBJDIR)/gpu.o
GENERATED += $(OBJDIR)/hardwareInfo.o
GENERATED += $(OBJDIR)/imageView.o
GENERATED += $(OBJDIR)/input.o
GENERATED += $(OBJDIR)/instance.o
GENERATED += $(OBJDIR)/log.o
GENERATED += $(OBJDIR)/maths.o
GENERATED += $(OBJDIR)/messageBox.o
GENERATED += $(OBJDIR)/paths.o
GENERATED += $(OBJDIR)/pipeline.o
GENERATED += $(OBJDIR)/queues.o
GENERATED += $(OBJDIR)/renderPass.o
GENERATED += $(OBJDIR)/rendering.o
GENERATED += $(OBJDIR)/softwareInfo.o
GENERATED += $(OBJDIR)/streamStack.o
GENERATED += $(OBJDIR)/surface.o
GENERATED += $(OBJDIR)/swapChain.o
GENERATED += $(OBJDIR)/token.o
GENERATED += $(OBJDIR)/validationLayers.o
GENERATED += $(OBJDIR)/window.o
OBJECTS += $(OBJDIR)/Akpch.o
OBJECTS += $(OBJDIR)/ELTMcontext.o
OBJECTS += $(OBJDIR)/ELTMerrors.o
OBJECTS += $(OBJDIR)/ELTMwarnings.o
OBJECTS += $(OBJDIR)/application.o
OBJECTS += $(OBJDIR)/camera.o
OBJECTS += $(OBJDIR)/commandBuffer.o
OBJECTS += $(OBJDIR)/consoleOut.o
OBJECTS += $(OBJDIR)/cpu.o
OBJECTS += $(OBJDIR)/device.o
OBJECTS += $(OBJDIR)/entity.o
OBJECTS += $(OBJDIR)/exit.o
OBJECTS += $(OBJDIR)/fps.o
OBJECTS += $(OBJDIR)/frameBuffer.o
OBJECTS += $(OBJDIR)/gpu.o
OBJECTS += $(OBJDIR)/hardwareInfo.o
OBJECTS += $(OBJDIR)/imageView.o
OBJECTS += $(OBJDIR)/input.o
OBJECTS += $(OBJDIR)/instance.o
OBJECTS += $(OBJDIR)/log.o
OBJECTS += $(OBJDIR)/maths.o
OBJECTS += $(OBJDIR)/messageBox.o
OBJECTS += $(OBJDIR)/paths.o
OBJECTS += $(OBJDIR)/pipeline.o
OBJECTS += $(OBJDIR)/queues.o
OBJECTS += $(OBJDIR)/renderPass.o
OBJECTS += $(OBJDIR)/rendering.o
OBJECTS += $(OBJDIR)/softwareInfo.o
OBJECTS += $(OBJDIR)/streamStack.o
OBJECTS += $(OBJDIR)/surface.o
OBJECTS += $(OBJDIR)/swapChain.o
OBJECTS += $(OBJDIR)/token.o
OBJECTS += $(OBJDIR)/validationLayers.o
OBJECTS += $(OBJDIR)/window.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Akel
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Akel
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Akpch.o: src/Akpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/application.o: src/Core/application.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/cpu.o: src/Core/cpu.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gpu.o: src/Core/gpu.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/hardwareInfo.o: src/Core/hardwareInfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/log.o: src/Core/log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/paths.o: src/Core/paths.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/softwareInfo.o: src/Core/softwareInfo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entity.o: src/Graphics/entity.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/maths.o: src/Maths/maths.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ELTMcontext.o: src/Modules/ELTM/ELTMcontext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ELTMerrors.o: src/Modules/ELTM/ELTMerrors.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ELTMwarnings.o: src/Modules/ELTM/ELTMwarnings.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/streamStack.o: src/Modules/ELTM/streamStack.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/token.o: src/Modules/ELTM/token.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/exit.o: src/Platform/exit.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/input.o: src/Platform/input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/messageBox.o: src/Platform/messageBox.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/window.o: src/Platform/window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/commandBuffer.o: src/Renderer/commandBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/device.o: src/Renderer/device.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/frameBuffer.o: src/Renderer/frameBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imageView.o: src/Renderer/imageView.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/instance.o: src/Renderer/instance.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pipeline.o: src/Renderer/pipeline.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/queues.o: src/Renderer/queues.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/renderPass.o: src/Renderer/renderPass.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rendering.o: src/Renderer/rendering.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/surface.o: src/Renderer/surface.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/swapChain.o: src/Renderer/swapChain.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/validationLayers.o: src/Renderer/validationLayers.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/camera.o: src/Utils/camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/consoleOut.o: src/Utils/consoleOut.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/fps.o: src/Utils/fps.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif